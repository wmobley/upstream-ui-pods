{
  "openapi": "3.1.0",
  "info": {
    "title": "Upstream Sensor Storage",
    "description": "Sensor Storage for Upstream data",
    "contact": { "name": "Will Mobley", "email": "wmobley@tacc.utexas.edu" },
    "version": "0.0.1"
  },
  "paths": {
    "/api/v1/token": {
      "post": {
        "tags": ["auth"],
        "summary": "Login",
        "operationId": "login_api_v1_token_post",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_login_api_v1_token_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/LoginResponse" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/v1/campaigns": {
      "post": {
        "tags": ["campaigns"],
        "summary": "Create Campaign",
        "operationId": "create_campaign_api_v1_campaigns_post",
        "security": [{ "OAuth2PasswordBearer": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CampaignsIn" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignCreateResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["campaigns"],
        "summary": "List Campaigns",
        "operationId": "list_campaigns_api_v1_campaigns_get",
        "security": [{ "OAuth2PasswordBearer": [] }],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "default": 1, "title": "Page" }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "default": 20, "title": "Limit" }
          },
          {
            "name": "bbox",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "description": "Bounding box of the campaign west,south,east,north",
              "title": "Bbox"
            },
            "description": "Bounding box of the campaign west,south,east,north"
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                { "type": "string", "format": "date-time" },
                { "type": "null" }
              ],
              "description": "Start date of the campaign",
              "title": "Start Date"
            },
            "description": "Start date of the campaign",
            "example": "2024-01-01"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                { "type": "string", "format": "date-time" },
                { "type": "null" }
              ],
              "description": "End date of the campaign",
              "title": "End Date"
            },
            "description": "End date of the campaign",
            "example": "2025-01-01"
          },
          {
            "name": "sensor_variables",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                { "type": "array", "items": { "type": "string" } },
                { "type": "null" }
              ],
              "description": "List of sensor variables to filter by",
              "title": "Sensor Variables"
            },
            "description": "List of sensor variables to filter by"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListCampaignsResponsePagination"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/v1/campaigns/{campaign_id}": {
      "get": {
        "tags": ["campaigns"],
        "summary": "Get Campaign",
        "operationId": "get_campaign_api_v1_campaigns__campaign_id__get",
        "security": [{ "OAuth2PasswordBearer": [] }],
        "parameters": [
          {
            "name": "campaign_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Campaign Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetCampaignResponse" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["campaigns"],
        "summary": "Delete Sensor",
        "operationId": "delete_sensor_api_v1_campaigns__campaign_id__delete",
        "security": [{ "OAuth2PasswordBearer": [] }],
        "parameters": [
          {
            "name": "campaign_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Campaign Id" }
          }
        ],
        "responses": {
          "204": { "description": "Successful Response" },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["campaigns"],
        "summary": "Update Campaign",
        "operationId": "update_campaign_api_v1_campaigns__campaign_id__put",
        "security": [{ "OAuth2PasswordBearer": [] }],
        "parameters": [
          {
            "name": "campaign_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Campaign Id" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CampaignsIn" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignCreateResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["campaigns"],
        "summary": "Partial Update Campaign",
        "operationId": "partial_update_campaign_api_v1_campaigns__campaign_id__patch",
        "security": [{ "OAuth2PasswordBearer": [] }],
        "parameters": [
          {
            "name": "campaign_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Campaign Id" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CampaignUpdate" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignCreateResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/v1/campaigns/{campaign_id}/stations": {
      "post": {
        "tags": ["stations"],
        "summary": "Create Station",
        "operationId": "create_station_api_v1_campaigns__campaign_id__stations_post",
        "security": [{ "OAuth2PasswordBearer": [] }],
        "parameters": [
          {
            "name": "campaign_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Campaign Id" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/StationCreate" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StationCreateResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["stations"],
        "summary": "List Stations",
        "operationId": "list_stations_api_v1_campaigns__campaign_id__stations_get",
        "security": [{ "OAuth2PasswordBearer": [] }],
        "parameters": [
          {
            "name": "campaign_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Campaign Id" }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "default": 1, "title": "Page" }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "default": 20, "title": "Limit" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListStationsResponsePagination"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["stations"],
        "summary": "Delete Sensor",
        "operationId": "delete_sensor_api_v1_campaigns__campaign_id__stations_delete",
        "security": [{ "OAuth2PasswordBearer": [] }],
        "parameters": [
          {
            "name": "campaign_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Campaign Id" }
          }
        ],
        "responses": {
          "204": { "description": "Successful Response" },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/v1/campaigns/{campaign_id}/stations/{station_id}": {
      "get": {
        "tags": ["stations"],
        "summary": "Get Station",
        "operationId": "get_station_api_v1_campaigns__campaign_id__stations__station_id__get",
        "security": [{ "OAuth2PasswordBearer": [] }],
        "parameters": [
          {
            "name": "station_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Station Id" }
          },
          {
            "name": "campaign_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Campaign Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetStationResponse" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["stations"],
        "summary": "Update Station",
        "operationId": "update_station_api_v1_campaigns__campaign_id__stations__station_id__put",
        "security": [{ "OAuth2PasswordBearer": [] }],
        "parameters": [
          {
            "name": "station_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Station Id" }
          },
          {
            "name": "campaign_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Campaign Id" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/StationUpdate" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StationCreateResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["stations"],
        "summary": "Partial Update Station",
        "operationId": "partial_update_station_api_v1_campaigns__campaign_id__stations__station_id__patch",
        "security": [{ "OAuth2PasswordBearer": [] }],
        "parameters": [
          {
            "name": "campaign_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Campaign Id" }
          },
          {
            "name": "station_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Station Id" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/StationUpdate" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StationCreateResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/v1/campaigns/{campaign_id}/stations/{station_id}/sensors/export": {
      "get": {
        "tags": ["stations"],
        "summary": "Export Sensors Csv",
        "description": "Export sensors for a station as CSV with streaming support.",
        "operationId": "export_sensors_csv_api_v1_campaigns__campaign_id__stations__station_id__sensors_export_get",
        "security": [{ "OAuth2PasswordBearer": [] }],
        "parameters": [
          {
            "name": "campaign_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Campaign Id" }
          },
          {
            "name": "station_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Station Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/v1/campaigns/{campaign_id}/stations/{station_id}/measurements/export": {
      "get": {
        "tags": ["stations"],
        "summary": "Export Measurements Csv",
        "description": "Export measurements for a station as CSV with streaming support.",
        "operationId": "export_measurements_csv_api_v1_campaigns__campaign_id__stations__station_id__measurements_export_get",
        "security": [{ "OAuth2PasswordBearer": [] }],
        "parameters": [
          {
            "name": "campaign_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Campaign Id" }
          },
          {
            "name": "station_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Station Id" }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                { "type": "string", "format": "date-time" },
                { "type": "null" }
              ],
              "description": "Start date filter",
              "title": "Start Date"
            },
            "description": "Start date filter"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                { "type": "string", "format": "date-time" },
                { "type": "null" }
              ],
              "description": "End date filter",
              "title": "End Date"
            },
            "description": "End date filter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/v1/campaigns/{campaign_id}/stations/{station_id}/sensors": {
      "get": {
        "tags": ["sensors"],
        "summary": "List Sensors",
        "operationId": "list_sensors_api_v1_campaigns__campaign_id__stations__station_id__sensors_get",
        "security": [{ "OAuth2PasswordBearer": [] }],
        "parameters": [
          {
            "name": "campaign_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Campaign Id" }
          },
          {
            "name": "station_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Station Id" }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "default": 1, "title": "Page" }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "default": 20, "title": "Limit" }
          },
          {
            "name": "variable_name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "description": "Filter sensors by variable name (partial match)",
              "title": "Variable Name"
            },
            "description": "Filter sensors by variable name (partial match)"
          },
          {
            "name": "units",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "description": "Filter sensors by units (exact match)",
              "title": "Units"
            },
            "description": "Filter sensors by units (exact match)"
          },
          {
            "name": "alias",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "description": "Filter sensors by alias (partial match)",
              "title": "Alias"
            },
            "description": "Filter sensors by alias (partial match)"
          },
          {
            "name": "description_contains",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "description": "Filter sensors by text in description (partial match)",
              "title": "Description Contains"
            },
            "description": "Filter sensors by text in description (partial match)"
          },
          {
            "name": "postprocess",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "boolean" }, { "type": "null" }],
              "description": "Filter sensors by postprocess flag",
              "title": "Postprocess"
            },
            "description": "Filter sensors by postprocess flag"
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                { "$ref": "#/components/schemas/SortField" },
                { "type": "null" }
              ],
              "description": "Sort sensors by field",
              "title": "Sort By"
            },
            "description": "Sort sensors by field"
          },
          {
            "name": "sort_order",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Sort order (asc or desc)",
              "default": "asc",
              "title": "Sort Order"
            },
            "description": "Sort order (asc or desc)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListSensorsResponsePagination"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["sensors"],
        "summary": "Delete Sensor",
        "operationId": "delete_sensor_api_v1_campaigns__campaign_id__stations__station_id__sensors_delete",
        "security": [{ "OAuth2PasswordBearer": [] }],
        "parameters": [
          {
            "name": "campaign_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Campaign Id" }
          },
          {
            "name": "station_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Station Id" }
          }
        ],
        "responses": {
          "204": { "description": "Successful Response" },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/v1/campaigns/{campaign_id}/stations/{station_id}/sensors/{sensor_id}": {
      "get": {
        "tags": ["sensors"],
        "summary": "Get Sensor",
        "operationId": "get_sensor_api_v1_campaigns__campaign_id__stations__station_id__sensors__sensor_id__get",
        "security": [{ "OAuth2PasswordBearer": [] }],
        "parameters": [
          {
            "name": "station_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Station Id" }
          },
          {
            "name": "sensor_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Sensor Id" }
          },
          {
            "name": "campaign_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Campaign Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetSensorResponse" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["sensors"],
        "summary": "Update Sensor",
        "operationId": "update_sensor_api_v1_campaigns__campaign_id__stations__station_id__sensors__sensor_id__put",
        "security": [{ "OAuth2PasswordBearer": [] }],
        "parameters": [
          {
            "name": "sensor_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Sensor Id" }
          },
          {
            "name": "station_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Station Id" }
          },
          {
            "name": "campaign_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Campaign Id" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/SensorUpdate" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SensorCreateResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["sensors"],
        "summary": "Partial Update Sensor",
        "operationId": "partial_update_sensor_api_v1_campaigns__campaign_id__stations__station_id__sensors__sensor_id__patch",
        "security": [{ "OAuth2PasswordBearer": [] }],
        "parameters": [
          {
            "name": "campaign_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Campaign Id" }
          },
          {
            "name": "station_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Station Id" }
          },
          {
            "name": "sensor_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Sensor Id" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/SensorUpdate" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SensorCreateResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/v1/campaigns/{campaign_id}/stations/{station_id}/sensors/{sensor_id}/measurements": {
      "post": {
        "tags": ["measurements"],
        "summary": "Create Measurement",
        "operationId": "create_measurement_api_v1_campaigns__campaign_id__stations__station_id__sensors__sensor_id__measurements_post",
        "security": [{ "OAuth2PasswordBearer": [] }],
        "parameters": [
          {
            "name": "station_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Station Id" }
          },
          {
            "name": "sensor_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Sensor Id" }
          },
          {
            "name": "campaign_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Campaign Id" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/MeasurementIn" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MeasurementCreateResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["measurements"],
        "summary": "Get Sensor Measurements",
        "operationId": "get_sensor_measurements_api_v1_campaigns__campaign_id__stations__station_id__sensors__sensor_id__measurements_get",
        "security": [{ "OAuth2PasswordBearer": [] }],
        "parameters": [
          {
            "name": "campaign_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Campaign Id" }
          },
          {
            "name": "station_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Station Id" }
          },
          {
            "name": "sensor_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Sensor Id" }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                { "type": "string", "format": "date-time" },
                { "type": "null" }
              ],
              "title": "Start Date"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                { "type": "string", "format": "date-time" },
                { "type": "null" }
              ],
              "title": "End Date"
            }
          },
          {
            "name": "min_measurement_value",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "number" }, { "type": "null" }],
              "title": "Min Measurement Value"
            }
          },
          {
            "name": "max_measurement_value",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "number" }, { "type": "null" }],
              "title": "Max Measurement Value"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "default": 1000, "title": "Limit" }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "default": 1, "title": "Page" }
          },
          {
            "name": "downsample_threshold",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "integer" }, { "type": "null" }],
              "title": "Downsample Threshold"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListMeasurementsResponsePagination"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["measurements"],
        "summary": "Delete Sensor Measurements",
        "operationId": "delete_sensor_measurements_api_v1_campaigns__campaign_id__stations__station_id__sensors__sensor_id__measurements_delete",
        "security": [{ "OAuth2PasswordBearer": [] }],
        "parameters": [
          {
            "name": "campaign_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Campaign Id" }
          },
          {
            "name": "station_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Station Id" }
          },
          {
            "name": "sensor_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Sensor Id" }
          }
        ],
        "responses": {
          "204": { "description": "Successful Response" },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/v1/campaigns/{campaign_id}/stations/{station_id}/sensors/{sensor_id}/measurements/confidence-intervals": {
      "get": {
        "tags": ["measurements"],
        "summary": "Get Measurements With Confidence Intervals",
        "description": "Get sensor measurements with confidence intervals for visualization.",
        "operationId": "get_measurements_with_confidence_intervals_api_v1_campaigns__campaign_id__stations__station_id__sensors__sensor_id__measurements_confidence_intervals_get",
        "parameters": [
          {
            "name": "campaign_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Campaign Id" }
          },
          {
            "name": "station_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Station Id" }
          },
          {
            "name": "sensor_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Sensor Id" }
          },
          {
            "name": "interval",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Time interval for aggregation (minute, hour, day)",
              "default": "hour",
              "title": "Interval"
            },
            "description": "Time interval for aggregation (minute, hour, day)"
          },
          {
            "name": "interval_value",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Multiple of interval (e.g., 15 for 15-minute intervals)",
              "default": 1,
              "title": "Interval Value"
            },
            "description": "Multiple of interval (e.g., 15 for 15-minute intervals)"
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                { "type": "string", "format": "date-time" },
                { "type": "null" }
              ],
              "description": "Start date for filtering measurements",
              "title": "Start Date"
            },
            "description": "Start date for filtering measurements"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                { "type": "string", "format": "date-time" },
                { "type": "null" }
              ],
              "description": "End date for filtering measurements",
              "title": "End Date"
            },
            "description": "End date for filtering measurements"
          },
          {
            "name": "min_value",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "number" }, { "type": "null" }],
              "description": "Minimum measurement value to include",
              "title": "Min Value"
            },
            "description": "Minimum measurement value to include"
          },
          {
            "name": "max_value",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "number" }, { "type": "null" }],
              "description": "Maximum measurement value to include",
              "title": "Max Value"
            },
            "description": "Maximum measurement value to include"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AggregatedMeasurement"
                  },
                  "title": "Response Get Measurements With Confidence Intervals Api V1 Campaigns  Campaign Id  Stations  Station Id  Sensors  Sensor Id  Measurements Confidence Intervals Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/v1/campaigns/{campaign_id}/stations/{station_id}/sensors/{sensor_id}/measurements/{measurement_id}": {
      "put": {
        "tags": ["measurements"],
        "summary": "Update Sensor",
        "operationId": "update_sensor_api_v1_campaigns__campaign_id__stations__station_id__sensors__sensor_id__measurements__measurement_id__put",
        "security": [{ "OAuth2PasswordBearer": [] }],
        "parameters": [
          {
            "name": "measurement_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Measurement Id" }
          },
          {
            "name": "station_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Station Id" }
          },
          {
            "name": "sensor_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Sensor Id" }
          },
          {
            "name": "campaign_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Campaign Id" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/MeasurementUpdate" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MeasurementCreateResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["measurements"],
        "summary": "Partial Update Sensor",
        "operationId": "partial_update_sensor_api_v1_campaigns__campaign_id__stations__station_id__sensors__sensor_id__measurements__measurement_id__patch",
        "security": [{ "OAuth2PasswordBearer": [] }],
        "parameters": [
          {
            "name": "campaign_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Campaign Id" }
          },
          {
            "name": "station_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Station Id" }
          },
          {
            "name": "sensor_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Sensor Id" }
          },
          {
            "name": "measurement_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Measurement Id" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/MeasurementUpdate" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MeasurementCreateResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/v1/sensor_variables": {
      "get": {
        "tags": ["sensor_variables"],
        "summary": "List Sensor Variables",
        "operationId": "list_sensor_variables_api_v1_sensor_variables_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": { "type": "string" },
                  "type": "array",
                  "title": "Response List Sensor Variables Api V1 Sensor Variables Get"
                }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/api/v1/uploadfile_csv/campaign/{campaign_id}/station/{station_id}/sensor": {
      "post": {
        "tags": ["uploadfile_csv"],
        "summary": "Post Sensor And Measurement",
        "description": "Process sensor and measurement files and store data in the database.",
        "operationId": "post_sensor_and_measurement_api_v1_uploadfile_csv_campaign__campaign_id__station__station_id__sensor_post",
        "security": [{ "OAuth2PasswordBearer": [] }],
        "parameters": [
          {
            "name": "campaign_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Campaign Id" }
          },
          {
            "name": "station_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Station Id" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_post_sensor_and_measurement_api_v1_uploadfile_csv_campaign__campaign_id__station__station_id__sensor_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Post Sensor And Measurement Api V1 Uploadfile Csv Campaign  Campaign Id  Station  Station Id  Sensor Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/v1/projects": {
      "get": {
        "tags": ["projects"],
        "summary": "Get Projects",
        "operationId": "get_projects_api_v1_projects_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": { "$ref": "#/components/schemas/PyTASProject" },
                  "type": "array",
                  "title": "Response Get Projects Api V1 Projects Get"
                }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/api/v1/projects/{project_id}/members": {
      "get": {
        "tags": ["projects"],
        "summary": "Get Project Members For User",
        "operationId": "get_project_members_for_user_api_v1_projects__project_id__members_get",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Project Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/PyTASUser" },
                  "title": "Response Get Project Members For User Api V1 Projects  Project Id  Members Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AggregatedMeasurement": {
        "properties": {
          "measurement_time": {
            "type": "string",
            "format": "date-time",
            "title": "Measurement Time"
          },
          "value": { "type": "number", "title": "Value" },
          "median_value": { "type": "number", "title": "Median Value" },
          "point_count": { "type": "integer", "title": "Point Count" },
          "lower_bound": { "type": "number", "title": "Lower Bound" },
          "upper_bound": { "type": "number", "title": "Upper Bound" },
          "parametric_lower_bound": {
            "type": "number",
            "title": "Parametric Lower Bound"
          },
          "parametric_upper_bound": {
            "type": "number",
            "title": "Parametric Upper Bound"
          },
          "std_dev": { "type": "number", "title": "Std Dev" },
          "min_value": { "type": "number", "title": "Min Value" },
          "max_value": { "type": "number", "title": "Max Value" },
          "percentile_25": { "type": "number", "title": "Percentile 25" },
          "percentile_75": { "type": "number", "title": "Percentile 75" },
          "ci_method": { "type": "string", "title": "Ci Method" },
          "confidence_level": { "type": "number", "title": "Confidence Level" }
        },
        "type": "object",
        "required": [
          "measurement_time",
          "value",
          "median_value",
          "point_count",
          "lower_bound",
          "upper_bound",
          "parametric_lower_bound",
          "parametric_upper_bound",
          "std_dev",
          "min_value",
          "max_value",
          "percentile_25",
          "percentile_75",
          "ci_method",
          "confidence_level"
        ],
        "title": "AggregatedMeasurement"
      },
      "Body_login_api_v1_token_post": {
        "properties": {
          "grant_type": {
            "anyOf": [
              { "type": "string", "pattern": "^password$" },
              { "type": "null" }
            ],
            "title": "Grant Type"
          },
          "username": { "type": "string", "title": "Username" },
          "password": { "type": "string", "title": "Password" },
          "scope": { "type": "string", "title": "Scope", "default": "" },
          "client_id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Client Id"
          },
          "client_secret": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Client Secret"
          }
        },
        "type": "object",
        "required": ["username", "password"],
        "title": "Body_login_api_v1_token_post"
      },
      "Body_post_sensor_and_measurement_api_v1_uploadfile_csv_campaign__campaign_id__station__station_id__sensor_post": {
        "properties": {
          "upload_file_sensors": {
            "type": "string",
            "format": "binary",
            "title": "Upload File Sensors",
            "description": "File with sensors."
          },
          "upload_file_measurements": {
            "type": "string",
            "format": "binary",
            "title": "Upload File Measurements",
            "description": "File with measurements."
          }
        },
        "type": "object",
        "required": ["upload_file_sensors", "upload_file_measurements"],
        "title": "Body_post_sensor_and_measurement_api_v1_uploadfile_csv_campaign__campaign_id__station__station_id__sensor_post"
      },
      "CampaignCreateResponse": {
        "properties": { "id": { "type": "integer", "title": "Id" } },
        "type": "object",
        "required": ["id"],
        "title": "CampaignCreateResponse"
      },
      "CampaignUpdate": {
        "properties": {
          "name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Name"
          },
          "description": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Description"
          },
          "contact_name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Contact Name"
          },
          "contact_email": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Contact Email"
          },
          "allocation": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Allocation"
          },
          "start_date": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Start Date"
          },
          "end_date": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "End Date"
          }
        },
        "type": "object",
        "title": "CampaignUpdate"
      },
      "CampaignsIn": {
        "properties": {
          "name": { "type": "string", "title": "Name" },
          "contact_name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Contact Name"
          },
          "contact_email": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Contact Email"
          },
          "description": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Description"
          },
          "start_date": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Start Date"
          },
          "end_date": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "End Date"
          },
          "allocation": { "type": "string", "title": "Allocation" }
        },
        "type": "object",
        "required": ["name", "allocation"],
        "title": "CampaignsIn"
      },
      "GetCampaignResponse": {
        "properties": {
          "id": { "type": "integer", "title": "Id" },
          "name": { "type": "string", "title": "Name" },
          "description": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Description"
          },
          "contact_name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Contact Name"
          },
          "contact_email": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Contact Email"
          },
          "start_date": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Start Date"
          },
          "end_date": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "End Date"
          },
          "allocation": { "type": "string", "title": "Allocation" },
          "location": {
            "anyOf": [
              { "$ref": "#/components/schemas/Location" },
              { "type": "null" }
            ]
          },
          "summary": { "$ref": "#/components/schemas/SummaryGetCampaign" },
          "geometry": {
            "type": "object",
            "title": "Geometry",
            "nullable": true
          },
          "stations": {
            "items": {
              "$ref": "#/components/schemas/StationsListResponseItem"
            },
            "type": "array",
            "title": "Stations",
            "default": []
          }
        },
        "type": "object",
        "required": ["id", "name", "allocation", "summary"],
        "title": "GetCampaignResponse"
      },
      "GetSensorResponse": {
        "properties": {
          "id": { "type": "integer", "title": "Id" },
          "alias": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Alias"
          },
          "description": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Description"
          },
          "postprocess": {
            "anyOf": [{ "type": "boolean" }, { "type": "null" }],
            "title": "Postprocess",
            "default": true
          },
          "postprocessscript": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Postprocessscript"
          },
          "units": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Units"
          },
          "variablename": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Variablename"
          },
          "statistics": {
            "anyOf": [
              { "$ref": "#/components/schemas/SensorStatistics" },
              { "type": "null" }
            ]
          }
        },
        "type": "object",
        "required": ["id"],
        "title": "GetSensorResponse"
      },
      "GetStationResponse": {
        "properties": {
          "id": { "type": "integer", "title": "Id" },
          "name": { "type": "string", "title": "Name" },
          "description": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Description"
          },
          "contact_name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Contact Name"
          },
          "contact_email": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Contact Email"
          },
          "active": {
            "anyOf": [{ "type": "boolean" }, { "type": "null" }],
            "title": "Active"
          },
          "start_date": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Start Date"
          },
          "geometry": {
            "type": "object",
            "title": "Geometry",
            "nullable": true
          },
          "sensors": {
            "anyOf": [
              {
                "items": { "$ref": "#/components/schemas/SensorItem" },
                "type": "array"
              },
              { "type": "null" }
            ],
            "title": "Sensors"
          }
        },
        "type": "object",
        "required": ["id", "name"],
        "title": "GetStationResponse"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": { "$ref": "#/components/schemas/ValidationError" },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "ListCampaignsResponseItem": {
        "properties": {
          "id": { "type": "integer", "title": "Id" },
          "name": { "type": "string", "title": "Name" },
          "location": {
            "anyOf": [
              { "$ref": "#/components/schemas/Location" },
              { "type": "null" }
            ]
          },
          "description": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Description"
          },
          "contact_name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Contact Name"
          },
          "contact_email": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Contact Email"
          },
          "start_date": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Start Date"
          },
          "end_date": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "End Date"
          },
          "allocation": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Allocation"
          },
          "summary": { "$ref": "#/components/schemas/SummaryListCampaigns" },
          "geometry": {
            "type": "object",
            "title": "Geometry",
            "nullable": true
          }
        },
        "type": "object",
        "required": ["id", "name", "summary"],
        "title": "ListCampaignsResponseItem"
      },
      "ListCampaignsResponsePagination": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/ListCampaignsResponseItem"
            },
            "type": "array",
            "title": "Items"
          },
          "total": { "type": "integer", "title": "Total" },
          "page": { "type": "integer", "title": "Page" },
          "size": { "type": "integer", "title": "Size" },
          "pages": { "type": "integer", "title": "Pages" }
        },
        "type": "object",
        "required": ["items", "total", "page", "size", "pages"],
        "title": "ListCampaignsResponsePagination"
      },
      "ListMeasurementsResponsePagination": {
        "properties": {
          "items": {
            "items": { "$ref": "#/components/schemas/MeasurementItem" },
            "type": "array",
            "title": "Items"
          },
          "total": { "type": "integer", "title": "Total" },
          "page": { "type": "integer", "title": "Page" },
          "size": { "type": "integer", "title": "Size" },
          "pages": { "type": "integer", "title": "Pages" },
          "min_value": { "type": "number", "title": "Min Value" },
          "max_value": { "type": "number", "title": "Max Value" },
          "average_value": { "type": "number", "title": "Average Value" },
          "downsampled": { "type": "boolean", "title": "Downsampled" },
          "downsampled_total": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Downsampled Total"
          }
        },
        "type": "object",
        "required": [
          "items",
          "total",
          "page",
          "size",
          "pages",
          "min_value",
          "max_value",
          "average_value",
          "downsampled"
        ],
        "title": "ListMeasurementsResponsePagination"
      },
      "ListSensorsResponsePagination": {
        "properties": {
          "items": {
            "items": { "$ref": "#/components/schemas/SensorItem" },
            "type": "array",
            "title": "Items"
          },
          "total": { "type": "integer", "title": "Total" },
          "page": { "type": "integer", "title": "Page" },
          "size": { "type": "integer", "title": "Size" },
          "pages": { "type": "integer", "title": "Pages" }
        },
        "type": "object",
        "required": ["items", "total", "page", "size", "pages"],
        "title": "ListSensorsResponsePagination"
      },
      "ListStationsResponsePagination": {
        "properties": {
          "items": {
            "items": { "$ref": "#/components/schemas/StationItemWithSummary" },
            "type": "array",
            "title": "Items"
          },
          "total": { "type": "integer", "title": "Total" },
          "page": { "type": "integer", "title": "Page" },
          "size": { "type": "integer", "title": "Size" },
          "pages": { "type": "integer", "title": "Pages" }
        },
        "type": "object",
        "required": ["items", "total", "page", "size", "pages"],
        "title": "ListStationsResponsePagination"
      },
      "Location": {
        "properties": {
          "bbox_west": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Bbox West"
          },
          "bbox_east": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Bbox East"
          },
          "bbox_south": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Bbox South"
          },
          "bbox_north": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Bbox North"
          }
        },
        "type": "object",
        "title": "Location"
      },
      "LoginResponse": {
        "properties": {
          "access_token": { "type": "string", "title": "Access Token" },
          "token_type": { "type": "string", "title": "Token Type" }
        },
        "type": "object",
        "required": ["access_token", "token_type"],
        "title": "LoginResponse"
      },
      "MeasurementCreateResponse": {
        "properties": { "id": { "type": "integer", "title": "Id" } },
        "type": "object",
        "required": ["id"],
        "title": "MeasurementCreateResponse"
      },
      "MeasurementIn": {
        "properties": {
          "sensorid": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Sensorid"
          },
          "collectiontime": {
            "type": "string",
            "format": "date-time",
            "title": "Collectiontime"
          },
          "geometry": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Geometry",
            "description": "Geometry in Well-Known Text (WKT) format, e.g. \"POINT(longitude latitude)\"",
            "examples": ["POINT(10.12345 20.54321)"]
          },
          "measurementvalue": { "type": "number", "title": "Measurementvalue" },
          "variablename": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Variablename"
          },
          "variabletype": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Variabletype"
          },
          "description": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Description"
          }
        },
        "type": "object",
        "required": ["collectiontime", "measurementvalue"],
        "title": "MeasurementIn"
      },
      "MeasurementItem": {
        "properties": {
          "id": { "type": "integer", "title": "Id" },
          "value": { "type": "number", "title": "Value" },
          "geometry": { "$ref": "#/components/schemas/Point" },
          "collectiontime": {
            "type": "string",
            "format": "date-time",
            "title": "Collectiontime"
          },
          "sensorid": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Sensorid"
          },
          "variablename": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Variablename"
          },
          "variabletype": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Variabletype"
          },
          "description": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Description"
          }
        },
        "type": "object",
        "required": ["id", "value", "geometry", "collectiontime"],
        "title": "MeasurementItem"
      },
      "MeasurementUpdate": {
        "properties": {
          "sensorid": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Sensorid"
          },
          "collectiontime": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Collectiontime"
          },
          "geometry": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Geometry",
            "description": "Geometry in Well-Known Text (WKT) format, e.g. \"POINT(longitude latitude)\"",
            "examples": ["POINT(10.12345 20.54321)"]
          },
          "measurementvalue": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Measurementvalue"
          },
          "variablename": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Variablename"
          },
          "variabletype": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Variabletype"
          },
          "description": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Description"
          }
        },
        "type": "object",
        "title": "MeasurementUpdate"
      },
      "Point": {
        "properties": {
          "bbox": {
            "anyOf": [
              {
                "prefixItems": [
                  { "type": "number" },
                  { "type": "number" },
                  { "type": "number" },
                  { "type": "number" }
                ],
                "type": "array",
                "maxItems": 4,
                "minItems": 4
              },
              {
                "prefixItems": [
                  { "type": "number" },
                  { "type": "number" },
                  { "type": "number" },
                  { "type": "number" },
                  { "type": "number" },
                  { "type": "number" }
                ],
                "type": "array",
                "maxItems": 6,
                "minItems": 6
              },
              { "type": "null" }
            ],
            "title": "Bbox"
          },
          "type": { "type": "string", "const": "Point", "title": "Type" },
          "coordinates": {
            "anyOf": [
              { "$ref": "#/components/schemas/Position2D" },
              { "$ref": "#/components/schemas/Position3D" }
            ],
            "title": "Coordinates"
          }
        },
        "type": "object",
        "required": ["type", "coordinates"],
        "title": "Point",
        "description": "Point Model"
      },
      "Position2D": {
        "prefixItems": [
          { "type": "number", "title": "Longitude" },
          { "type": "number", "title": "Latitude" }
        ],
        "type": "array",
        "maxItems": 2,
        "minItems": 2
      },
      "Position3D": {
        "prefixItems": [
          { "type": "number", "title": "Longitude" },
          { "type": "number", "title": "Latitude" },
          { "type": "number", "title": "Altitude" }
        ],
        "type": "array",
        "maxItems": 3,
        "minItems": 3
      },
      "PyTASAllocation": {
        "properties": {
          "id": { "type": "integer", "title": "Id" },
          "start": { "type": "string", "title": "Start" },
          "end": { "type": "string", "title": "End" },
          "status": { "type": "string", "title": "Status" },
          "justification": { "type": "string", "title": "Justification" },
          "decisionSummary": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Decisionsummary"
          },
          "dateRequested": { "type": "string", "title": "Daterequested" },
          "dateReviewed": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Datereviewed"
          },
          "computeRequested": {
            "type": "integer",
            "title": "Computerequested"
          },
          "computeAllocated": {
            "type": "integer",
            "title": "Computeallocated"
          },
          "storageRequested": {
            "type": "integer",
            "title": "Storagerequested"
          },
          "storageAllocated": {
            "type": "integer",
            "title": "Storageallocated"
          },
          "memoryRequested": { "type": "integer", "title": "Memoryrequested" },
          "memoryAllocated": { "type": "integer", "title": "Memoryallocated" },
          "resourceId": { "type": "integer", "title": "Resourceid" },
          "resource": { "type": "string", "title": "Resource" },
          "projectId": { "type": "integer", "title": "Projectid" },
          "project": { "type": "string", "title": "Project" },
          "requestorId": { "type": "integer", "title": "Requestorid" },
          "requestor": { "type": "string", "title": "Requestor" },
          "reviewerId": { "type": "integer", "title": "Reviewerid" },
          "reviewer": { "title": "Reviewer" },
          "computeUsed": { "type": "number", "title": "Computeused" }
        },
        "type": "object",
        "required": [
          "id",
          "start",
          "end",
          "status",
          "justification",
          "decisionSummary",
          "dateRequested",
          "dateReviewed",
          "computeRequested",
          "computeAllocated",
          "storageRequested",
          "storageAllocated",
          "memoryRequested",
          "memoryAllocated",
          "resourceId",
          "resource",
          "projectId",
          "project",
          "requestorId",
          "requestor",
          "reviewerId",
          "reviewer",
          "computeUsed"
        ],
        "title": "PyTASAllocation"
      },
      "PyTASPi": {
        "properties": {
          "id": { "type": "integer", "title": "Id" },
          "username": { "type": "string", "title": "Username" },
          "email": { "type": "string", "title": "Email" },
          "firstName": { "type": "string", "title": "Firstname" },
          "lastName": { "type": "string", "title": "Lastname" },
          "institution": { "type": "string", "title": "Institution" },
          "institutionId": { "type": "integer", "title": "Institutionid" },
          "department": { "type": "string", "title": "Department" },
          "departmentId": { "type": "integer", "title": "Departmentid" },
          "citizenship": { "type": "string", "title": "Citizenship" },
          "citizenshipId": { "type": "integer", "title": "Citizenshipid" },
          "source": { "type": "string", "title": "Source" },
          "uid": { "type": "integer", "title": "Uid" },
          "homeDirectory": { "type": "string", "title": "Homedirectory" },
          "gid": { "type": "integer", "title": "Gid" }
        },
        "type": "object",
        "required": [
          "id",
          "username",
          "email",
          "firstName",
          "lastName",
          "institution",
          "institutionId",
          "department",
          "departmentId",
          "citizenship",
          "citizenshipId",
          "source",
          "uid",
          "homeDirectory",
          "gid"
        ],
        "title": "PyTASPi"
      },
      "PyTASProject": {
        "properties": {
          "id": { "type": "integer", "title": "Id" },
          "title": { "type": "string", "title": "Title" },
          "description": { "type": "string", "title": "Description" },
          "chargeCode": { "type": "string", "title": "Chargecode" },
          "gid": { "type": "integer", "title": "Gid" },
          "source": { "title": "Source" },
          "fieldId": { "type": "integer", "title": "Fieldid" },
          "field": { "type": "string", "title": "Field" },
          "typeId": { "type": "integer", "title": "Typeid" },
          "type": { "type": "string", "title": "Type" },
          "piId": { "type": "integer", "title": "Piid" },
          "pi": { "$ref": "#/components/schemas/PyTASPi" },
          "allocations": {
            "items": { "$ref": "#/components/schemas/PyTASAllocation" },
            "type": "array",
            "title": "Allocations"
          },
          "nickname": { "title": "Nickname" }
        },
        "type": "object",
        "required": [
          "id",
          "title",
          "description",
          "chargeCode",
          "gid",
          "source",
          "fieldId",
          "field",
          "typeId",
          "type",
          "piId",
          "pi",
          "allocations",
          "nickname"
        ],
        "title": "PyTASProject"
      },
      "PyTASUser": {
        "properties": {
          "id": { "type": "integer", "title": "Id" },
          "username": { "type": "string", "title": "Username" },
          "role": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Role"
          },
          "firstName": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Firstname"
          },
          "lastName": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Lastname"
          },
          "email": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Email"
          }
        },
        "type": "object",
        "required": ["id", "username"],
        "title": "PyTASUser"
      },
      "SensorCreateResponse": {
        "properties": { "id": { "type": "integer", "title": "Id" } },
        "type": "object",
        "required": ["id"],
        "title": "SensorCreateResponse"
      },
      "SensorItem": {
        "properties": {
          "id": { "type": "integer", "title": "Id" },
          "alias": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Alias"
          },
          "description": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Description"
          },
          "postprocess": {
            "anyOf": [{ "type": "boolean" }, { "type": "null" }],
            "title": "Postprocess",
            "default": true
          },
          "postprocessscript": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Postprocessscript"
          },
          "units": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Units"
          },
          "variablename": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Variablename"
          },
          "statistics": {
            "anyOf": [
              { "$ref": "#/components/schemas/SensorStatistics" },
              { "type": "null" }
            ]
          }
        },
        "type": "object",
        "required": ["id"],
        "title": "SensorItem"
      },
      "SensorStatistics": {
        "properties": {
          "max_value": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Max Value"
          },
          "min_value": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Min Value"
          },
          "avg_value": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Avg Value"
          },
          "stddev_value": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Stddev Value"
          },
          "percentile_90": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Percentile 90"
          },
          "percentile_95": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Percentile 95"
          },
          "percentile_99": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Percentile 99"
          },
          "count": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Count"
          },
          "first_measurement_value": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "First Measurement Value"
          },
          "first_measurement_collectiontime": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "First Measurement Collectiontime"
          },
          "last_measurement_time": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Last Measurement Time"
          },
          "last_measurement_value": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Last Measurement Value"
          },
          "stats_last_updated": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Stats Last Updated"
          }
        },
        "type": "object",
        "title": "SensorStatistics"
      },
      "SensorSummaryForStations": {
        "properties": {
          "id": { "type": "integer", "title": "Id" },
          "variable_name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Variable Name"
          },
          "measurement_unit": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Measurement Unit"
          }
        },
        "type": "object",
        "required": ["id"],
        "title": "SensorSummaryForStations"
      },
      "SensorUpdate": {
        "properties": {
          "alias": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Alias"
          },
          "description": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Description"
          },
          "postprocess": {
            "anyOf": [{ "type": "boolean" }, { "type": "null" }],
            "title": "Postprocess",
            "default": true
          },
          "postprocessscript": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Postprocessscript"
          },
          "units": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Units"
          },
          "variablename": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Variablename"
          }
        },
        "type": "object",
        "title": "SensorUpdate"
      },
      "SortField": {
        "type": "string",
        "enum": [
          "alias",
          "description",
          "postprocess",
          "postprocessscript",
          "units",
          "variablename",
          "max_value",
          "min_value",
          "avg_value",
          "stddev_value",
          "percentile_90",
          "percentile_95",
          "percentile_99",
          "count",
          "first_measurement_value",
          "first_measurement_collectiontime",
          "last_measurement_value",
          "last_measurement_collectiontime"
        ],
        "title": "SortField"
      },
      "StationCreate": {
        "properties": {
          "name": { "type": "string", "title": "Name" },
          "description": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Description"
          },
          "contact_name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Contact Name"
          },
          "contact_email": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Contact Email"
          },
          "active": {
            "anyOf": [{ "type": "boolean" }, { "type": "null" }],
            "title": "Active",
            "default": true
          },
          "start_date": {
            "type": "string",
            "format": "date-time",
            "title": "Start Date"
          },
          "station_type": {
            "$ref": "#/components/schemas/StationType",
            "default": "static"
          }
        },
        "type": "object",
        "required": ["name", "start_date"],
        "title": "StationCreate"
      },
      "StationCreateResponse": {
        "properties": { "id": { "type": "integer", "title": "Id" } },
        "type": "object",
        "required": ["id"],
        "title": "StationCreateResponse"
      },
      "StationItemWithSummary": {
        "properties": {
          "id": { "type": "integer", "title": "Id" },
          "name": { "type": "string", "title": "Name" },
          "description": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Description"
          },
          "contact_name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Contact Name"
          },
          "contact_email": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Contact Email"
          },
          "active": {
            "anyOf": [{ "type": "boolean" }, { "type": "null" }],
            "title": "Active"
          },
          "start_date": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Start Date"
          },
          "geometry": {
            "type": "object",
            "title": "Geometry",
            "nullable": true
          },
          "sensor_count": { "type": "integer", "title": "Sensor Count" },
          "sensor_types": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Sensor Types"
          },
          "sensor_variables": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Sensor Variables"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "sensor_count",
          "sensor_types",
          "sensor_variables"
        ],
        "title": "StationItemWithSummary"
      },
      "StationType": {
        "type": "string",
        "enum": ["mobile", "static"],
        "title": "StationType"
      },
      "StationUpdate": {
        "properties": {
          "name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Name"
          },
          "description": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Description"
          },
          "contact_name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Contact Name"
          },
          "contact_email": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Contact Email"
          },
          "active": {
            "anyOf": [{ "type": "boolean" }, { "type": "null" }],
            "title": "Active"
          },
          "start_date": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Start Date"
          },
          "station_type": {
            "anyOf": [
              { "$ref": "#/components/schemas/StationType" },
              { "type": "null" }
            ]
          }
        },
        "type": "object",
        "title": "StationUpdate"
      },
      "StationsListResponseItem": {
        "properties": {
          "id": { "type": "integer", "title": "Id" },
          "name": { "type": "string", "title": "Name" },
          "description": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Description"
          },
          "contact_name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Contact Name"
          },
          "contact_email": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Contact Email"
          },
          "active": {
            "anyOf": [{ "type": "boolean" }, { "type": "null" }],
            "title": "Active"
          },
          "start_date": {
            "type": "string",
            "format": "date-time",
            "title": "Start Date"
          },
          "geometry": {
            "type": "object",
            "title": "Geometry",
            "nullable": true
          },
          "sensors": {
            "items": {
              "$ref": "#/components/schemas/SensorSummaryForStations"
            },
            "type": "array",
            "title": "Sensors",
            "default": []
          }
        },
        "type": "object",
        "required": ["id", "name", "start_date"],
        "title": "StationsListResponseItem"
      },
      "SummaryGetCampaign": {
        "properties": {
          "station_count": { "type": "integer", "title": "Station Count" },
          "sensor_count": { "type": "integer", "title": "Sensor Count" },
          "sensor_types": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Sensor Types"
          },
          "sensor_variables": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Sensor Variables"
          }
        },
        "type": "object",
        "required": [
          "station_count",
          "sensor_count",
          "sensor_types",
          "sensor_variables"
        ],
        "title": "SummaryGetCampaign"
      },
      "SummaryListCampaigns": {
        "properties": {
          "sensor_types": {
            "anyOf": [
              { "items": { "type": "string" }, "type": "array" },
              { "type": "null" }
            ],
            "title": "Sensor Types"
          },
          "variable_names": {
            "anyOf": [
              { "items": { "type": "string" }, "type": "array" },
              { "type": "null" }
            ],
            "title": "Variable Names"
          }
        },
        "type": "object",
        "title": "SummaryListCampaigns"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": { "anyOf": [{ "type": "string" }, { "type": "integer" }] },
            "type": "array",
            "title": "Location"
          },
          "msg": { "type": "string", "title": "Message" },
          "type": { "type": "string", "title": "Error Type" }
        },
        "type": "object",
        "required": ["loc", "msg", "type"],
        "title": "ValidationError"
      }
    },
    "securitySchemes": {
      "OAuth2PasswordBearer": {
        "type": "oauth2",
        "flows": { "password": { "scopes": {}, "tokenUrl": "api/v1/token" } }
      }
    }
  }
}
