/* tslint:disable */
/* eslint-disable */
/**
 * Upstream Sensor Storage
 * Sensor Storage for Upstream data
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: wmobley@tacc.utexas.edu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { SensorSummaryForStations } from './SensorSummaryForStations';
import {
    SensorSummaryForStationsFromJSON,
    SensorSummaryForStationsFromJSONTyped,
    SensorSummaryForStationsToJSON,
    SensorSummaryForStationsToJSONTyped,
} from './SensorSummaryForStations';

/**
 * 
 * @export
 * @interface StationsListResponseItem
 */
export interface StationsListResponseItem {
    /**
     * 
     * @type {number}
     * @memberof StationsListResponseItem
     */
    id: number;
    /**
     * 
     * @type {string}
     * @memberof StationsListResponseItem
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof StationsListResponseItem
     */
    description?: string | null;
    /**
     * 
     * @type {string}
     * @memberof StationsListResponseItem
     */
    contactName?: string | null;
    /**
     * 
     * @type {string}
     * @memberof StationsListResponseItem
     */
    contactEmail?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof StationsListResponseItem
     */
    active?: boolean | null;
    /**
     * 
     * @type {Date}
     * @memberof StationsListResponseItem
     */
    startDate: Date;
    /**
     * 
     * @type {object}
     * @memberof StationsListResponseItem
     */
    geometry?: object;
    /**
     * 
     * @type {Array<SensorSummaryForStations>}
     * @memberof StationsListResponseItem
     */
    sensors?: Array<SensorSummaryForStations>;
}

/**
 * Check if a given object implements the StationsListResponseItem interface.
 */
export function instanceOfStationsListResponseItem(value: object): value is StationsListResponseItem {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('startDate' in value) || value['startDate'] === undefined) return false;
    return true;
}

export function StationsListResponseItemFromJSON(json: any): StationsListResponseItem {
    return StationsListResponseItemFromJSONTyped(json, false);
}

export function StationsListResponseItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): StationsListResponseItem {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'description': json['description'] == null ? undefined : json['description'],
        'contactName': json['contact_name'] == null ? undefined : json['contact_name'],
        'contactEmail': json['contact_email'] == null ? undefined : json['contact_email'],
        'active': json['active'] == null ? undefined : json['active'],
        'startDate': (new Date(json['start_date'])),
        'geometry': json['geometry'] == null ? undefined : json['geometry'],
        'sensors': json['sensors'] == null ? undefined : ((json['sensors'] as Array<any>).map(SensorSummaryForStationsFromJSON)),
    };
}

export function StationsListResponseItemToJSON(json: any): StationsListResponseItem {
    return StationsListResponseItemToJSONTyped(json, false);
}

export function StationsListResponseItemToJSONTyped(value?: StationsListResponseItem | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'name': value['name'],
        'description': value['description'],
        'contact_name': value['contactName'],
        'contact_email': value['contactEmail'],
        'active': value['active'],
        'start_date': ((value['startDate']).toISOString()),
        'geometry': value['geometry'],
        'sensors': value['sensors'] == null ? undefined : ((value['sensors'] as Array<any>).map(SensorSummaryForStationsToJSON)),
    };
}

