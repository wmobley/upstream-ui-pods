/* tslint:disable */
/* eslint-disable */
/**
 * Upstream Sensor Storage
 * Sensor Storage for Upstream data
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: wmobley@tacc.utexas.edu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { SensorItem } from './SensorItem';
import {
    SensorItemFromJSON,
    SensorItemFromJSONTyped,
    SensorItemToJSON,
    SensorItemToJSONTyped,
} from './SensorItem';

/**
 * 
 * @export
 * @interface GetStationResponse
 */
export interface GetStationResponse {
    /**
     * 
     * @type {number}
     * @memberof GetStationResponse
     */
    id: number;
    /**
     * 
     * @type {string}
     * @memberof GetStationResponse
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof GetStationResponse
     */
    description?: string | null;
    /**
     * 
     * @type {string}
     * @memberof GetStationResponse
     */
    contactName?: string | null;
    /**
     * 
     * @type {string}
     * @memberof GetStationResponse
     */
    contactEmail?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof GetStationResponse
     */
    active?: boolean | null;
    /**
     * 
     * @type {Date}
     * @memberof GetStationResponse
     */
    startDate?: Date | null;
    /**
     * 
     * @type {object}
     * @memberof GetStationResponse
     */
    geometry?: object;
    /**
     * 
     * @type {Array<SensorItem>}
     * @memberof GetStationResponse
     */
    sensors?: Array<SensorItem> | null;
}

/**
 * Check if a given object implements the GetStationResponse interface.
 */
export function instanceOfGetStationResponse(value: object): value is GetStationResponse {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    return true;
}

export function GetStationResponseFromJSON(json: any): GetStationResponse {
    return GetStationResponseFromJSONTyped(json, false);
}

export function GetStationResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetStationResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'description': json['description'] == null ? undefined : json['description'],
        'contactName': json['contact_name'] == null ? undefined : json['contact_name'],
        'contactEmail': json['contact_email'] == null ? undefined : json['contact_email'],
        'active': json['active'] == null ? undefined : json['active'],
        'startDate': json['start_date'] == null ? undefined : (new Date(json['start_date'])),
        'geometry': json['geometry'] == null ? undefined : json['geometry'],
        'sensors': json['sensors'] == null ? undefined : ((json['sensors'] as Array<any>).map(SensorItemFromJSON)),
    };
}

export function GetStationResponseToJSON(json: any): GetStationResponse {
    return GetStationResponseToJSONTyped(json, false);
}

export function GetStationResponseToJSONTyped(value?: GetStationResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'name': value['name'],
        'description': value['description'],
        'contact_name': value['contactName'],
        'contact_email': value['contactEmail'],
        'active': value['active'],
        'start_date': value['startDate'] == null ? undefined : ((value['startDate'] as any).toISOString()),
        'geometry': value['geometry'],
        'sensors': value['sensors'] == null ? undefined : ((value['sensors'] as Array<any>).map(SensorItemToJSON)),
    };
}

