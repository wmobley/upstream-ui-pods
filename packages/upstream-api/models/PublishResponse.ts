/* tslint:disable */
/* eslint-disable */
/**
 * Upstream Sensor Storage
 * Sensor Storage for Upstream data
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: wmobley@tacc.utexas.edu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface PublishResponse
 */
export interface PublishResponse {
    /**
     *
     * @type {number}
     * @memberof PublishResponse
     */
    id: number;
    /**
     *
     * @type {string}
     * @memberof PublishResponse
     */
    type: string;
    /**
     *
     * @type {boolean}
     * @memberof PublishResponse
     */
    isPublished: boolean;
    /**
     *
     * @type {Date}
     * @memberof PublishResponse
     */
    publishedAt?: Date | null;
    /**
     *
     * @type {Array<string>}
     * @memberof PublishResponse
     */
    cascadedItems: Array<string>;
}

/**
 * Check if a given object implements the PublishResponse interface.
 */
export function instanceOfPublishResponse(value: object): value is PublishResponse {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('isPublished' in value) || value['isPublished'] === undefined) return false;
    if (!('cascadedItems' in value) || value['cascadedItems'] === undefined) return false;
    return true;
}

export function PublishResponseFromJSON(json: any): PublishResponse {
    return PublishResponseFromJSONTyped(json, false);
}

export function PublishResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): PublishResponse {
    if (json == null) {
        return json;
    }
    return {

        'id': json['id'],
        'type': json['type'],
        'isPublished': json['is_published'],
        'publishedAt': json['published_at'] == null ? undefined : (new Date(json['published_at'])),
        'cascadedItems': json['cascaded_items'],
    };
}

export function PublishResponseToJSON(json: any): PublishResponse {
    return PublishResponseToJSONTyped(json, false);
}

export function PublishResponseToJSONTyped(value?: PublishResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {

        'id': value['id'],
        'type': value['type'],
        'is_published': value['isPublished'],
        'published_at': value['publishedAt'] == null ? undefined : ((value['publishedAt'] as any).toISOString()),
        'cascaded_items': value['cascadedItems'],
    };
}