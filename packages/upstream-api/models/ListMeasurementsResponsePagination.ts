/* tslint:disable */
/* eslint-disable */
/**
 * Upstream Sensor Storage
 * Sensor Storage for Upstream data
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: wmobley@tacc.utexas.edu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { MeasurementItem } from './MeasurementItem';
import {
    MeasurementItemFromJSON,
    MeasurementItemFromJSONTyped,
    MeasurementItemToJSON,
    MeasurementItemToJSONTyped,
} from './MeasurementItem';

/**
 * 
 * @export
 * @interface ListMeasurementsResponsePagination
 */
export interface ListMeasurementsResponsePagination {
    /**
     * 
     * @type {Array<MeasurementItem>}
     * @memberof ListMeasurementsResponsePagination
     */
    items: Array<MeasurementItem>;
    /**
     * 
     * @type {number}
     * @memberof ListMeasurementsResponsePagination
     */
    total: number;
    /**
     * 
     * @type {number}
     * @memberof ListMeasurementsResponsePagination
     */
    page: number;
    /**
     * 
     * @type {number}
     * @memberof ListMeasurementsResponsePagination
     */
    size: number;
    /**
     * 
     * @type {number}
     * @memberof ListMeasurementsResponsePagination
     */
    pages: number;
    /**
     * 
     * @type {number}
     * @memberof ListMeasurementsResponsePagination
     */
    minValue: number;
    /**
     * 
     * @type {number}
     * @memberof ListMeasurementsResponsePagination
     */
    maxValue: number;
    /**
     * 
     * @type {number}
     * @memberof ListMeasurementsResponsePagination
     */
    averageValue: number;
    /**
     * 
     * @type {boolean}
     * @memberof ListMeasurementsResponsePagination
     */
    downsampled: boolean;
    /**
     * 
     * @type {number}
     * @memberof ListMeasurementsResponsePagination
     */
    downsampledTotal?: number | null;
}

/**
 * Check if a given object implements the ListMeasurementsResponsePagination interface.
 */
export function instanceOfListMeasurementsResponsePagination(value: object): value is ListMeasurementsResponsePagination {
    if (!('items' in value) || value['items'] === undefined) return false;
    if (!('total' in value) || value['total'] === undefined) return false;
    if (!('page' in value) || value['page'] === undefined) return false;
    if (!('size' in value) || value['size'] === undefined) return false;
    if (!('pages' in value) || value['pages'] === undefined) return false;
    if (!('minValue' in value) || value['minValue'] === undefined) return false;
    if (!('maxValue' in value) || value['maxValue'] === undefined) return false;
    if (!('averageValue' in value) || value['averageValue'] === undefined) return false;
    if (!('downsampled' in value) || value['downsampled'] === undefined) return false;
    return true;
}

export function ListMeasurementsResponsePaginationFromJSON(json: any): ListMeasurementsResponsePagination {
    return ListMeasurementsResponsePaginationFromJSONTyped(json, false);
}

export function ListMeasurementsResponsePaginationFromJSONTyped(json: any, ignoreDiscriminator: boolean): ListMeasurementsResponsePagination {
    if (json == null) {
        return json;
    }
    return {
        
        'items': ((json['items'] as Array<any>).map(MeasurementItemFromJSON)),
        'total': json['total'],
        'page': json['page'],
        'size': json['size'],
        'pages': json['pages'],
        'minValue': json['min_value'],
        'maxValue': json['max_value'],
        'averageValue': json['average_value'],
        'downsampled': json['downsampled'],
        'downsampledTotal': json['downsampled_total'] == null ? undefined : json['downsampled_total'],
    };
}

export function ListMeasurementsResponsePaginationToJSON(json: any): ListMeasurementsResponsePagination {
    return ListMeasurementsResponsePaginationToJSONTyped(json, false);
}

export function ListMeasurementsResponsePaginationToJSONTyped(value?: ListMeasurementsResponsePagination | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'items': ((value['items'] as Array<any>).map(MeasurementItemToJSON)),
        'total': value['total'],
        'page': value['page'],
        'size': value['size'],
        'pages': value['pages'],
        'min_value': value['minValue'],
        'max_value': value['maxValue'],
        'average_value': value['averageValue'],
        'downsampled': value['downsampled'],
        'downsampled_total': value['downsampledTotal'],
    };
}

